Penso che potresti usare elementi più semantici di div, prova a vedere i seguenti:
main
article
section

Hai finito per mettere davanti ad ogni classe la parola website...il che la rende inutile per migliorare la lettura del codice :D
se la togliessi ovunque avresti classi con nome più corto e più leggibile

Occhio quando imposti altezze con valori assoluti (es. height: 250px), se il contenuto richiedesse più spazio
questo andrebbe in overflow. Usa piuttosto un'altezza minimna se hai bisogno che l'elemento raggiunga un certo punto verticalmente. In questo modo
se il contenuto fosse più grande del previsto, si prendererebbe tutto lo spazio verticale che gli serve. 

Per questo esercizio ti saresti potuto risparmiare il media query con un flex-wrap e impostanto una larghezza minima sulle card in modo che, 
qualora non avessero avuto più spazio sarebbero andate a capo.

Il css è un po' troppo copincollato...astrai alcuni elementi comuni (ti ho lasciato un esempio)

In definitiva il sito c'è, ed è responsive! quindi complimenti!

Ripulisci e rifattorizza (modifica il codice senza modificare il risultato) e poi prova a cimentarti con questo sito:
https://nicepage.com/templates/preview/happiness-consulting-2847475?device=desktop

vediamo come te la cavi con un sito più lungo...


Ciao Maurizio. Congratulazioni per aver completato il corso!
Hai fatto un quantitativo di progressi sorprendente, e ti sei impegnato un sacco. Sono contento che tu abbia sperimentato con angular e abbia provato a realizzare
un semplice social network. Ovviamente mancano le integrazioni con il backend, ma la struttura e i componenti sono ottimi: logici, leggibili. 
Questo è il modo in cui si lavora con un framework come angular. Creando pezzi a cui è facile dare un nome. 

Ricorda sempre di pulire il codice e rifattorizzare prima di fare git push: 
 - crea nuovi componenti che rappresentano elementi logici dell'applicazione a cui ti sembra logico dare un nome (es. Todo-list, todo-item).
 - rimuovi componenti che non sembrano avere più un senso logico, e il cui nome non significa niente.
 - scomponi le funzioni troppo lunghe e con troppi parametri. Una funzione deve fare una sola cosa...
 - rinomina funzioni e variabili se pensi che il loro nome può migliorare ed essere più esplicito.
 - semplifica le logiche con i boolean il più possibile, meno if (e meno if innestati) ci sono, e più il codice è facile da leggere.
 etc. etc.

Ovviamente non è finita qui. Non si finisce mai di migliorare. 
Cerca di rendere il codice leggibile, studia nuove tecniche per farlo. Questo è un lavoro di squadra.
Allarga la tua comprensione della programmazione imparando nuovi linguaggi e nuove tecnologie e nuovi ambiti. 
Sperimenta in continuazione, anche a costo di sbagliare. C'è sempre git per rimediare agli errori.
